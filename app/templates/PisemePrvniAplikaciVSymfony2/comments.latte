{block content}
<div id="middle-page">

<h2>Komentáře</h2>

<p>Nyní si do blogu doplníme samotné komentáře. Nejprve se podíváme na zobrazení seznamu jednotlivých komentářů
    k danému příspěvku a v dalším
    kroku se budeme zabývat vložením nového komentáře. Pokud jste si nestáhli vzorová data, tak můžete
    učinit <a href="{$basePath}/files/blog.sql" title="Stáhnout databázi blog">tady</a> a nebo je potřeba si naplnit tabulku <code>comment</code> vlastními daty. Výpisem komentářů
    začínám proto, že mi pomůže lépe odhalit případné chyby.
</p>

<h3>Entita a asociace</h3>

<p>Vzhledem k tomu, že i v tomto případě budeme potřebovat databázi, tak práci začneme tím, že si vytvoříme entitu.
Rozdíl oproti předešlému návrhu bude akorát v tom, že v tabulce máme definovaný cizí klíč <span class="i">article_id</span>.
Ovšem Doctrine2 pracuje na jiném principu než relační databáze &#8211; svět nemáme popsaný pomocí tabulek, ale pomocí entit
tzn., že pro popis vztahů mezi entitami nebudeme používat cizí klíče tak, jak je známe,
ale pro popis vztahů mezi entitami budeme využívat tzv. <span class="i">asociace</span>, a to podle typu vazeb (1:1, 1:N a M:N).
V našem příkladě si vystačíme s jednoduchou asociací typu 1:N
a použijeme anotaci <code>@ManyToOne</code>, a to na straně, kde máme definovaný cizí klíč.
Přehled všech typů je uveden v&nbsp;<a href="http://docs.doctrine-project.org/en/latest/reference/association-mapping.html" title="Doctrine2: Association Mapping"
target="_blank">dokumentaci</a>.
</p>
<p>Všimněte si, že sloupec s ID příspěvku mám v databázi pojmenovaný jako <code>article_id</code>,
    v definici entity mu pak odpovídá proměnná <code>$articleId</code>, která se odkazuje na daný sloupec.
</p>

<pre>
&lt;?php

namespace pds\BlogBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity
 * @ORM\Table(name="comment")
 */
class Comment
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=2500)
     */
    protected $text;

    /**
     * @ORM\Column(type="string", length=32)
     */
    protected $login;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $date;

    /**
     * @ORM\ManyToOne(targetEntity="Article")
     * @ORM\JoinColumn(name="article_id", referencedColumnName="id")
     * @ORM\Column(name="article_id", type="integer")
     */
    protected $articleId;

    /* Properties */

    public function getId()
    {
        return $this->id;
    }

    public function getText()
    {
        return $this->text;
    }

    public function setText($text)
    {
        $this->text = $text;
    }

    public function getLogin()
    {
        return $this->login;
    }

    public function setLogin($login)
    {
        $this->login = $login;
    }

    public function getDate()
    {
        return $this->date;
    }

    public function setDate($date)
    {
        $this->date = $date;
    }

    public function getArticleId()
    {
        return $this->articleId;
    }

    public function setArticleId($articleId)
    {
        $this->articleId = $articleId;
    }
}
</pre>

<h3>Přehled komentářů</h3>
<p>Práci s komentáři nám bude zajišťovat <code>CommentController</code>. Jako první si připravíme funkci
    <code>fetchAllByArticleIdAction()</code>
    pro vypsání všech komentářů, které se nacházejí pod daným příspěvkem. Pojďme si takový controller vytvořit.
</p>
<pre>
&lt;?php

namespace pds\BlogBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;

class CommentController extends Controller
{
    public function fetchAllByArticleIdAction($articleId)
    {
        $comments = $this->getDoctrine()
            ->getManager()
            ->createQuery('
                SELECT c FROM pdsBlogBundle:Comment c
                WHERE c.articleId = :articleId
                ORDER BY c.date DESC
            ')
            ->setParameter('articleId', $articleId)
            ->getResult()
        ;
        
        return $this->render('pdsBlogBundle:Comment:comment.html.twig', [
            'comments' => $comments
        ]);
    }
}
</pre>

<p>Nyní si do složky <code>Resources/views/Comment</code> doplníme šablonu <code>comment.html.twig</code> pro vypsání jednoho komentáře.</p>
<pre>
<?php echo '{'; ?># src/pds/BlogBundle/Resources/views/Comment/comment.html.twig #<?php echo '}'; ?>


<?php echo "{" ?>% block comment %<?php echo "}" ?>

<?php echo "{" ?>% if comments is empty %<?php echo "}" ?>

  &lt;p&gt;Dosud nebyl vložen žádný komentář.&lt;/p&gt;
<?php echo "{" ?>% else %<?php echo "}" ?>

  <?php echo "{" ?>% for comment in comments %<?php echo "}" ?>

    &lt;div class="comment"&gt;
      &lt;p class="text"&gt;
        &lt;span class="name"&gt;<?php echo "{" ?><?php echo "{" ?> comment.getLogin <?php echo "}" ?><?php echo "}" ?>&lt;/span&gt;:&lt;br /&gt;
        <?php echo "{" ?><?php echo "{" ?> comment.getText <?php echo "}" ?><?php echo "}" ?>&lt;br /&gt;
        &lt;span class="date"&gt;<?php echo "{" ?><?php echo "{" ?> comment.getDate|date('d.m.Y | H:i:s') <?php echo "}" ?><?php echo "}" ?>&lt;/span&gt;
      &lt;/p&gt;
    &lt;/div&gt;
  <?php echo "{" ?>% endfor %<?php echo "}" ?>

<?php echo "{" ?>% endif %<?php echo "}" ?>

<?php echo "{" ?>% endblock %<?php echo "}" ?>
</pre>

<p>Funkci <code>fetchAllByArticleId()</code> z <span class="i">CommentControlleru</span> pak potřebujeme zavolat na samostatné stránce
    s&nbsp;příspěkem. Tuto stránku nám generuje <span class="i">ArticleController</span>. Proto do šablony <code>article.html.twig</code>
    doplním následující kód:</p>
<pre>
<?php echo '{'; ?># src/pds/BlogBundle/Resources/views/Article/article.html.twig #<?php echo '}'; ?>


&lt;div id="comment-block"&gt;
  &lt;h3&gt;Přidat komentář&lt;/h3&gt;
  
  &lt;h3&gt;Komentáře:&lt;/h3&gt;
  <?php echo "{" ?>% block comment %<?php echo "}" ?>

    <?php echo "{" ?><?php echo "{" ?> render(controller('pdsBlogBundle:Comment:fetchAllByArticleId',
        <?php echo "{" ?> 'articleId': article.getId <?php echo "}" ?> )) <?php echo "}" ?><?php echo "}" ?>

  <?php echo "{" ?>% endblock %<?php echo "}" ?>

&lt;/div&gt;
</pre>

<p>V dalším díle si již vyzkoušíme udělat jednoduchý formulář.</p>

</div>
{/block}